{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AppView = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _PlaylistCollection = require('./collections/PlaylistCollection');\n\nvar _SongView = require('./views/SongView');\n\nvar _SyncCollection = require('./collections/SyncCollection');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } //import Marionette from 'backbone.marionette';\n//import { SongList } from './collections/SongCollection';\n\n//import { SyncView } from './views/SyncView';\n\n\nvar _Backbone = Backbone;\nvar Model = _Backbone.Model;\nvar View = _Backbone.View;\nvar Collection = _Backbone.Collection;\nvar Router = _Backbone.Router;\nvar _Marionette = Marionette;\nvar Application = _Marionette.Application;\n\n// Global Songs collection variable.\n//var Songs = new SongList();\n\nvar Playlists = new _PlaylistCollection.PlaylistCollection();\n\n//http://marionettejs.com/docs/v3.0.0-pre.2/marionette.application.html#getting-started\n/*export class App extends Application\n{\n  constructor() {\n    super();\n    this.addRegions({\n      syncRegion: \"#sync\"\n    });\n\n    this.syncCollection = new SyncCollection();\n    //var syncView = new SyncView();\n    console.log(this.syncCollection);\n    console.log('hello, Marionette');\n  }\n}*/\n\nvar AppView = exports.AppView = function (_View) {\n  _inherits(AppView, _View);\n\n  function AppView() {\n    _classCallCheck(this, AppView);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(AppView).call(this));\n\n    _this.$el = $('#app');\n    _this.$sync = $('#sync');\n\n    _this.soundcloudReady = false;\n\n    // Authorise Soundcloud SDK.\n    if ($(\"meta[name='soundcloud_client_id']\").length) {\n      _this.authorise();\n    }\n\n    // Sync music if needed.\n    _this.syncAllMusic();\n\n    // Event when all playlists are processed.\n    //this.listenTo(Playlists, 'reset', this.addAll);\n\n    // Populate Songs collection with static data provided by server in data var.\n    //Songs.reset(data, {parse: true});\n    //Songs.fetch();\n    return _this;\n  }\n\n  /**\n   * Render App.\n   */\n\n\n  _createClass(AppView, [{\n    key: 'render',\n    value: function render() {}\n\n    /**\n     * Sync all music.\n     */\n\n  }, {\n    key: 'syncAllMusic',\n    value: function syncAllMusic() {\n      var context = this;\n      // Check if there is any refresh icons.\n      if ($('#sync i.fa-refresh').length) {\n        // Found refresh icon - sync.\n        $('#sync i.fa-refresh').each(function () {\n          context.syncMusic($(this).parents('li.sync-service'));\n        });\n      }\n    }\n\n    /**\n     * Sync service music\n     * @param  jQuery obj $elem\n     */\n\n  }, {\n    key: 'syncMusic',\n    value: function syncMusic($elem) {\n      var title = $elem.attr('data-service-title');\n      Backbone.ajax({\n        dataType: \"json\",\n        url: \"/api/sync/\" + title,\n        data: \"\",\n        success: function success(val) {\n          //collection.add(val);  //or reset\n          //console.log(collection);\n          console.log(val);\n        }\n      });\n    }\n\n    /**\n     * Display all songs.\n     */\n    /*addAll() {\n      //this.$('#playlist').html('');\n      // Iterate through songs and add each to html.\n      Songs.each(this.addOne, this);\n    }*/\n\n    /**\n     * Display one song.\n     */\n    /*addOne(model) {\n      var view = new SongView({ model });\n      // Append list with rendered Song partial view.\n      $('#playlist').append(view.render().el);\n    }*/\n\n    /**\n     * Authorize Soundcloud SDK\n     */\n\n  }, {\n    key: 'authorise',\n    value: function authorise() {\n      SC.initialize({\n        client_id: $(\"meta[name='soundcloud_client_id']\").getAttribute('content'),\n        redirect_uri: $(\"meta[name='soundcloud_redirect_uri']\").getAttribute('content')\n      });\n\n      this.soundcloudReady = true;\n    }\n  }]);\n\n  return AppView;\n}(View);\n\n},{\"./collections/PlaylistCollection\":2,\"./collections/SyncCollection\":3,\"./views/SongView\":9}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PlaylistCollection = undefined;\n\nvar _Playlist = require('../models/Playlist');\n\nvar _PlaylistView = require('../views/PlaylistView');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _Backbone = Backbone;\nvar Collection = _Backbone.Collection;\n\nvar PlaylistCollection = exports.PlaylistCollection = function (_Collection) {\n  _inherits(PlaylistCollection, _Collection);\n\n  function PlaylistCollection() {\n    _classCallCheck(this, PlaylistCollection);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(PlaylistCollection).call(this));\n\n    _this.model = _Playlist.Playlist;\n\n    _.each($('#tracklist ul'), function (service) {\n      var playlist = new _Playlist.Playlist(),\n          songs = [];\n\n      _.each($(service).children('li'), function (song) {\n        songs.push({\n          title: $(song).text()\n        });\n      }, this);\n\n      playlist.set({\n        service: $(service).parents('.tracklist').attr('data-service'),\n        songs: songs\n      });\n\n      var playlistView = new _PlaylistView.PlaylistView({\n        model: playlist,\n        el: 'ul'\n      });\n    }, _this);\n    return _this;\n  }\n\n  return PlaylistCollection;\n}(Collection);\n\n},{\"../models/Playlist\":5,\"../views/PlaylistView\":8}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SyncCollection = undefined;\n\nvar _Sync = require('../models/Sync');\n\nvar _SyncView = require('../views/SyncView');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _Backbone = Backbone;\nvar Collection = _Backbone.Collection;\n\nvar SyncCollection = exports.SyncCollection = function (_Collection) {\n  _inherits(SyncCollection, _Collection);\n\n  function SyncCollection() {\n    _classCallCheck(this, SyncCollection);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SyncCollection).call(this));\n\n    console.log('SyncCollection constructor');\n\n    _this.model = _Sync.Sync;\n\n    _.each($('#sync li'), function (a) {\n      if ($(a).hasClass('label')) {\n        return;\n      }\n\n      var $icon_elem = $(a).find('i'),\n          sync = new _Sync.Sync();\n\n      sync.set({\n        icon: $icon_elem.attr('class'),\n        icon_replace: $icon_elem.attr('data-icon-replace'),\n        link: $(a).children().attr('href'),\n        name: $icon_elem.attr('title')\n      });\n\n      var syncView = new _SyncView.SyncView({\n        model: sync,\n        el: a\n      });\n\n      // Check if need to sync service.\n      if (_.indexOf(sync.get('icon').split(' '), 'fa-spin') != -1) {\n        console.log('needs sync');\n        sync.doSync();\n      }\n\n      // Add this new model to the collection\n      this.add(sync);\n    }, _this);\n    return _this;\n  }\n\n  return SyncCollection;\n}(Collection);\n\n},{\"../models/Sync\":6,\"../views/SyncView\":10}],4:[function(require,module,exports){\n'use strict';\n\nvar _app = require('./app');\n\n/**\n * Document ready event\n */\n$(function () {\n  new _app.AppView();\n  //new App();\n}); /**\n     * ES6\n     * ref:\n     * http://tastejs.com/todomvc-backbone-es6/\n     * https://github.com/tastejs/todomvc-backbone-es6/blob/gh-pages/js/app.js\n     * https://github.com/tastejs/todomvc-backbone-es6/blob/gh-pages/js/todo-app.js\n     * Browserify: https://github.com/substack/node-browserify#usage\n     * Image lazyload:\n     * http://luis-almeida.github.io/unveil/\n     * http://stackoverflow.com/questions/18366550/using-lazy-loading-with-backbone\n     *\n     * Backbone tutorial:\n     * https://github.com/amejiarosario/Backbone-tutorial/blob/master/backbone-tutorial.html\n     * http://adrianmejia.com/blog/2012/09/11/backbone-dot-js-for-absolute-beginners-getting-started/\n     *\n     * Soundcloud JS SDK\n     * https://developers.soundcloud.com/docs/api/sdks\n     *\n     * Handy!!\n     * http://simblestudios.com/blog/development/wmtafo-backbone-part1.html\n     *\n     * Backbone.js Patterns:\n     * http://ricostacruz.com/backbone-patterns/index.html\n     */\n\n},{\"./app\":1}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _Backbone = Backbone;\nvar Model = _Backbone.Model;\n\n/**\n * Playlist Model.\n */\n\nvar Playlist = exports.Playlist = function (_Model) {\n  _inherits(Playlist, _Model);\n\n  function Playlist() {\n    _classCallCheck(this, Playlist);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Playlist).apply(this, arguments));\n  }\n\n  _createClass(Playlist, [{\n    key: 'defaults',\n    value: function defaults() {\n      return {\n        service: '',\n        songs: []\n      };\n    }\n  }]);\n\n  return Playlist;\n}(Model);\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _Backbone = Backbone;\nvar Model = _Backbone.Model;\n\n/**\n * Sync Model.\n */\n\nvar Sync = exports.Sync = function (_Model) {\n  _inherits(Sync, _Model);\n\n  function Sync() {\n    _classCallCheck(this, Sync);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Sync).apply(this, arguments));\n  }\n\n  _createClass(Sync, [{\n    key: 'defaults',\n    value: function defaults() {\n      return {\n        name: '',\n        icon: '',\n        icon_replace: '',\n        link: ''\n      };\n    }\n  }, {\n    key: 'doSync',\n    value: function doSync() {\n      Backbone.ajax({\n        dataType: \"json\",\n        url: \"/api/sync/\" + this.get('name'),\n        data: \"\",\n        success: function success(val) {\n          //collection.add(val);  //or reset\n          //console.log(collection);\n          console.log(val);\n        }\n      });\n    }\n  }]);\n\n  return Sync;\n}(Model);\n\n},{}],7:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Songs list item template.\n */\nvar SONG_LI_TPL = exports.SONG_LI_TPL = _.template(\"<span class='title'><%= title %></span>\" + \"<button class='play'>Play</button>\");\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _Backbone = Backbone;\nvar View = _Backbone.View;\n//import { SyncCollection } from '../collections/SyncCollection';\n\nvar PlaylistView = exports.PlaylistView = function (_View) {\n  _inherits(PlaylistView, _View);\n\n  function PlaylistView(options) {\n    _classCallCheck(this, PlaylistView);\n\n    //options.tagName = 'ul';\n    console.log('playlistView');\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(PlaylistView).call(this, options));\n\n    // fix context issues\n    //_.bindAll(this, 'doSync', 'render');\n    //this.listenTo(Songs, 'reset', this.addAll);\n  }\n\n  _createClass(PlaylistView, [{\n    key: 'render',\n    value: function render() {\n      $(this.el).html('TEST');\n      return this;\n    }\n  }]);\n\n  return PlaylistView;\n}(View);\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SongView = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _song_li = require('../templates/song_li.tpl');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _Backbone = Backbone;\nvar View = _Backbone.View;\n\nvar SongView = exports.SongView = function (_View) {\n  _inherits(SongView, _View);\n\n  function SongView(options) {\n    _classCallCheck(this, SongView);\n\n    // Parent element doesn't have defined tagName,\n    // Therefore append options object with it\n    // because this.tagName will not work in this context.\n    options.tagName = 'li';\n    // Add class to li element.\n    options.className = 'playlist-song';\n\n    // Attach events.\n    options.events = {\n      \"click button.play\": \"play\"\n    };\n\n    // Cache the template function for a single item.\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SongView).call(this, options));\n\n    _this.template = _song_li.SONG_LI_TPL;\n    return _this;\n  }\n\n  _createClass(SongView, [{\n    key: 'render',\n    value: function render() {\n      // Pass model data to template and then append to DOM.\n      this.$el.html(this.template(this.model.toJSON()));\n\n      this.$el.toggleClass('active', this.model.get('active'));\n      return this;\n    }\n\n    /**\n     * Play button event callback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.model.toggle();\n    }\n  }]);\n\n  return SongView;\n}(View);\n\n},{\"../templates/song_li.tpl\":7}],10:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _Marionette = Marionette;\nvar View = _Marionette.View;\n//import { SyncCollection } from '../collections/SyncCollection';\n\nvar SyncView = exports.SyncView = function (_View) {\n  _inherits(SyncView, _View);\n\n  function SyncView(options) {\n    _classCallCheck(this, SyncView);\n\n    console.log('SyncView constructor');\n    console.log(options);\n\n    options.tagName = 'li';\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SyncView).call(this, options));\n\n    console.log(_this);\n    // fix context issues\n    //_.bindAll(this, 'doSync', 'render');\n    //this.listenTo(Songs, 'reset', this.addAll);\n    return _this;\n  }\n\n  _createClass(SyncView, [{\n    key: 'doSync',\n    value: function doSync() {\n      console.log('z?');\n      this.model.doSync();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      $(this.el).html('TEST');\n      return this;\n    }\n  }]);\n\n  return SyncView;\n}(View);\n\n},{}]},{},[4]);\n"],"file":"main.js","sourceRoot":"/source/"}