{"version":3,"sources":["app.scss","base/_reset.scss","utils/_variables.scss","layout/_header.scss","../../../node_modules/breakpoint-sass/stylesheets/_breakpoint.scss"],"names":[],"mappings":"AAEA,4CAGG;AAEH,oDAGG;AAWH,gFAGG;AAEH,8CAEG;AAGH,uEAEG;ACjCH,+DAGG;AAGD,6eACE,UAAU,CACV,WAAW,CACX,UAAU,CACV,gBAAgB,CAChB,cAAc,CACd,yBAAyB,EAC1B;;AAGD,0FACE,eAAe,EAChB;;AACD,OACE,eAAe,EAChB;;AACD,SACE,iBAAiB,EAClB;;AACD,gBACE,aAAa,EACd;;AACD,sCAEI,YAAY,CACZ,cAAc,EACf;;AAEH,oBAEI,YAAY,CACZ,cAAc,EACf;;AAEH,QACE,0BAA0B,CAC1B,kBAAkB,EACnB;;ADPH,sEAEG;AAGH,oDAEG;AAGH,gEAEG;AEhDH,sBAEG;AAEH,yCAEG;AF6CH,oFAEG;AGrDH,sBAEG;AACH,SACE,YAAY,CACZ,aAAa,CACb,uBAAuB,CACvB,kBAAkB,EAKnB;;ACoDG,4BD7DJ,SAOI,gBAAgB,EAEnB,EAAA;;AH4CD,6CAEG","file":"app.css","sourcesContent":["// @import \"node_modules/bootstrap-sass/assets/stylesheets/bootstrap\";\n\n/**\n * Import Susy.\n * http://susy.oddbird.net/\n */\n@import \"../../../node_modules/susy/sass/susy\";\n/**\n * Import Breakpoint\n * http://breakpoint-sass.com/\n */\n@import \"../../../node_modules/breakpoint-sass/stylesheets/breakpoint\";\n\n$susy: (\n  columns: 12,\n  container: 1200px,\n  gutters: 1/4, // The size of a gutter in relation to a single column\n  global-box-sizing: border-box,\n  debug: (image: show)\n);\n\n/**\n * The 7-1 Pattern by Hugo Giraudel\n * http://sass-guidelin.es/#the-7-1-pattern\n */\n\n/**\n * Contains 3rd-party styles, mixins, etc.\n */\n@import 'vendors/module';\n\n/**\n * Contains global styles, such as resets, typography, colors, etc.\n */\n@import 'base/module';\n\n/**\n * Contains each self-contained component in its own .scss partial\n */\n@import 'components/module';\n\n/**\n * Contains page-specific styling, if necessary.\n */\n@import 'pages/module';\n\n/**\n * Contains global mixins, functions, helper selectors, etc.\n */\n@import 'utils/module';\n\n/**\n * Contains styling for larger layout components; e.g. nav, header, footer, etc.\n */\n@import 'layout/module';\n\n/**\n * Contains styling for different themes.\n */\n@import 'themes/module';\n","/**\n * Reset/normalize.\n * https://github.com/adamstac/meyer-reset\n */\n\n@mixin meyer-reset {\n  html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n\n  // HTML5 display-role reset for older browsers\n  article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n  body {\n    line-height: 1;\n  }\n  ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote {\n    &:before, &:after {\n      content: \"\";\n      content: none;\n    }\n  }\n  q {\n    &:before, &:after {\n      content: \"\";\n      content: none;\n    }\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n}\n\n@include meyer-reset;\n","/**\n * Variables File.\n */\n\n/**\n * Breakpoints for responsive design.\n */\n$breakpoints: (\n  'medium': 800px,\n  'large':  1000px,\n  'huge':   1200px,\n);\n","/**\n * Header element.\n */\nheader {\n  width: 100%;\n  height: 50px;\n  border: 2px solid #000;\n  background: green;\n\n  @include breakpoint(map-get($breakpoints, 'medium')) {\n    background: red;\n  }\n}\n","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n"],"sourceRoot":"/source/"}